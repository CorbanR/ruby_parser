task :default => :setup
task :realclean => :clean

def ruby_parse version
  v        = version[/^\d+\.\d+/].delete "."
  rp_txt   = "rp#{v}.txt"
  mri_txt  = "mri#{v}.txt"
  parse_y  = "parse#{v}.y"
  tarball  = "ruby-#{version}.tar.bz2"
  ruby_dir = "ruby-#{version}"

  task :setup => mri_txt
  task :setup => rp_txt

  file mri_txt => parse_y do
    sh "bison -r all #{parse_y}"
    sh "./normalize.rb parse#{v}.output > #{mri_txt}"
    rm ["parse#{v}.output", "parse#{v}.tab.c"]
  end

  file rp_txt do
    sh "./normalize.rb ../lib/ruby#{v}_parser.output > #{rp_txt}"
  end

  file parse_y => tarball do
    system "tar yxf #{tarball} #{ruby_dir}/{id.h,parse.y,tool/{id2token.rb,vpath.rb}}"
    Dir.chdir ruby_dir do
      if File.exist? "tool/id2token.rb" then
        sh "ruby tool/id2token.rb --path-separator=.:./ id.h parse.y > ../#{parse_y}"
      else
        cp "parse.y", "../#{parse_y}"
      end
    end
    sh "rm -rf #{ruby_dir}"
  end

  file tarball do
    dl version
  end

  task :clean do
    rm_f Dir[parse_y, mri_txt, rp_txt]
  end

  task :realclean do
    rm_f Dir[tarball]
  end
end

task :clean do
  rm_f Dir["*~"]
end

ruby_parse "1.8.7-p374"
ruby_parse "1.9.3-p551"
ruby_parse "2.0.0-p648"
ruby_parse "2.1.9"
ruby_parse "2.2.6"
ruby_parse "2.3.3"
# ruby_parse "2.4.0"

def dl v
  dir = v[/^\d+\.\d+/]
  url = "https://cache.ruby-lang.org/pub/ruby/#{dir}/ruby-#{v}.tar.bz2"
  path = File.basename url
  unless File.exist? path then
    system "curl -O #{url}"
  end
end
